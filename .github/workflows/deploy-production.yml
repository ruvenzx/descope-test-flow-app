name: Deploy to Production Project

on:
  push:
    branches: [ 'main' ]
  workflow_dispatch:
    inputs:
      force_import:
        description: 'Skip checking for recent changes'
        type: boolean
        required: true
        default: true
      secrets:
        description: 'An optional JSON array with additional secrets to inject into the import data'
        default: ''

env:
  FILES_PATH: DescopeFiles

jobs:
  check:
    name: Check For Changes
    if: ${{ !inputs.force_import }}
    runs-on: ubuntu-latest
    outputs:
      has_changes: ${{ steps.check.outputs.has_changes }}    
    steps:
      - name: Checkout Files   
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check For Changes
        id: check
        shell: bash
        run: |
          echo "Checking for project files to deploy"
          if [ ! -d "${{ env.FILES_PATH }}" ]; then
            MSG="There are no project files to deploy in the repository."
            echo "$MSG"
            echo "## Deployment Skipped" >> $GITHUB_STEP_SUMMARY
            echo "$MSG" >> $GITHUB_STEP_SUMMARY
          elif [ -n "$(git show HEAD --oneline --name-only -- "${{ env.FILES_PATH }}" 2> /dev/null)" ]; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            MSG="There were no changes to project files in the latest commit."
            echo "$MSG"
            echo "## Deployment Skipped" >> $GITHUB_STEP_SUMMARY
            echo ":information_source: $MSG" >> $GITHUB_STEP_SUMMARY
          fi

  deploy:
    name: Deploy Project
    if: ${{ (always() && inputs.force_import) || needs.check.outputs.has_changes == 'true' }}
    needs: check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Files   
        uses: actions/checkout@v4

      - name: Import Production Project
        id: import
        uses: descope/descopecli/.github/actions/import@validate-import
        with:
          project_id: ${{ vars.PRODUCTION_PROJECT_ID }}
          management_key: ${{ secrets.MANAGEMENT_KEY }}
          descope_base_url: 'https://gil.descope.team'
          files_path: ${{ env.FILES_PATH }}
          secrets: ${{ inputs.secrets }}

      - name: Notify If Missing Secrets
        if: ${{ always() && steps.import.outputs.missing_secrets != '' }}
        shell: bash
        run: |
          WORKFLOW_URL="$GITHUB_SERVER_URL/$(echo "$GITHUB_WORKFLOW_REF" | sed -e 's|/.github/workflows/|/actions/workflows/|' -e 's|@.*$||')"
          echo '
          ## Deployment Aborted
          #### Missing Secrets
          The deployment operation cannot proceed because it is missing values for secrets
          that are needed for creating new project entities or updating existing ones.
          #### How to Continue
          You can resume the deployment by copying the JSON array below and filling in the
          missing secrets in the `value` keys. You should then [dispatch the workflow]('$WORKFLOW_URL') manually
          by pressing the `Run workflow` button and pasting the JSON array with the secrets
          into the text field in the dialog.
          ```json
          '"$(cat ${{ steps.import.outputs.missing_secrets }})"'
          ```
          > [!NOTE]
          > The JSON array will be pasted as one line of text without any line breaks.
          ' >> $GITHUB_STEP_SUMMARY
